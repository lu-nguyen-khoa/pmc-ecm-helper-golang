// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: api/authenticator/authenticator.proto

package authenticator

import (
	protobuf "github.com/Pharmacity-JSC/pmc-ecm-protobuf-golang/protobuf"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ESignInKind int32

const (
	ESignInKind_CUSTOMER ESignInKind = 0
	ESignInKind_EMPLOYEE ESignInKind = 1
)

// Enum value maps for ESignInKind.
var (
	ESignInKind_name = map[int32]string{
		0: "CUSTOMER",
		1: "EMPLOYEE",
	}
	ESignInKind_value = map[string]int32{
		"CUSTOMER": 0,
		"EMPLOYEE": 1,
	}
)

func (x ESignInKind) Enum() *ESignInKind {
	p := new(ESignInKind)
	*p = x
	return p
}

func (x ESignInKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ESignInKind) Descriptor() protoreflect.EnumDescriptor {
	return file_api_authenticator_authenticator_proto_enumTypes[0].Descriptor()
}

func (ESignInKind) Type() protoreflect.EnumType {
	return &file_api_authenticator_authenticator_proto_enumTypes[0]
}

func (x ESignInKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ESignInKind.Descriptor instead.
func (ESignInKind) EnumDescriptor() ([]byte, []int) {
	return file_api_authenticator_authenticator_proto_rawDescGZIP(), []int{0}
}

type UserSignInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind     ESignInKind `protobuf:"varint,1,opt,name=kind,proto3,enum=pharmacity.authentication.authenticator.ESignInKind" json:"kind,omitempty"`
	Username string      `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password string      `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *UserSignInRequest) Reset() {
	*x = UserSignInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_authenticator_authenticator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSignInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSignInRequest) ProtoMessage() {}

func (x *UserSignInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_authenticator_authenticator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSignInRequest.ProtoReflect.Descriptor instead.
func (*UserSignInRequest) Descriptor() ([]byte, []int) {
	return file_api_authenticator_authenticator_proto_rawDescGZIP(), []int{0}
}

func (x *UserSignInRequest) GetKind() ESignInKind {
	if x != nil {
		return x.Kind
	}
	return ESignInKind_CUSTOMER
}

func (x *UserSignInRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserSignInRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UserSignInData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId      string `protobuf:"bytes,1,opt,name=token_id,proto3" json:"token_id,omitempty"`
	AccessToken  string `protobuf:"bytes,2,opt,name=access_token,proto3" json:"access_token,omitempty"`
	RefreshToken string `protobuf:"bytes,3,opt,name=refresh_token,proto3" json:"refresh_token,omitempty"`
}

func (x *UserSignInData) Reset() {
	*x = UserSignInData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_authenticator_authenticator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSignInData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSignInData) ProtoMessage() {}

func (x *UserSignInData) ProtoReflect() protoreflect.Message {
	mi := &file_api_authenticator_authenticator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSignInData.ProtoReflect.Descriptor instead.
func (*UserSignInData) Descriptor() ([]byte, []int) {
	return file_api_authenticator_authenticator_proto_rawDescGZIP(), []int{1}
}

func (x *UserSignInData) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *UserSignInData) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *UserSignInData) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type UserSignInReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Inner:
	//
	//	*UserSignInReply_Error
	//	*UserSignInReply_Data
	Inner isUserSignInReply_Inner `protobuf_oneof:"inner"`
}

func (x *UserSignInReply) Reset() {
	*x = UserSignInReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_authenticator_authenticator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSignInReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSignInReply) ProtoMessage() {}

func (x *UserSignInReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_authenticator_authenticator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSignInReply.ProtoReflect.Descriptor instead.
func (*UserSignInReply) Descriptor() ([]byte, []int) {
	return file_api_authenticator_authenticator_proto_rawDescGZIP(), []int{2}
}

func (m *UserSignInReply) GetInner() isUserSignInReply_Inner {
	if m != nil {
		return m.Inner
	}
	return nil
}

func (x *UserSignInReply) GetError() *protobuf.Error {
	if x, ok := x.GetInner().(*UserSignInReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *UserSignInReply) GetData() *UserSignInData {
	if x, ok := x.GetInner().(*UserSignInReply_Data); ok {
		return x.Data
	}
	return nil
}

type isUserSignInReply_Inner interface {
	isUserSignInReply_Inner()
}

type UserSignInReply_Error struct {
	Error *protobuf.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type UserSignInReply_Data struct {
	Data *UserSignInData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*UserSignInReply_Error) isUserSignInReply_Inner() {}

func (*UserSignInReply_Data) isUserSignInReply_Inner() {}

type ServiceSignInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *ServiceSignInRequest) Reset() {
	*x = ServiceSignInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_authenticator_authenticator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceSignInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceSignInRequest) ProtoMessage() {}

func (x *ServiceSignInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_authenticator_authenticator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceSignInRequest.ProtoReflect.Descriptor instead.
func (*ServiceSignInRequest) Descriptor() ([]byte, []int) {
	return file_api_authenticator_authenticator_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceSignInRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ServiceSignInRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ServiceSignInData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId      string `protobuf:"bytes,1,opt,name=token_id,proto3" json:"token_id,omitempty"`
	AccessToken  string `protobuf:"bytes,2,opt,name=access_token,proto3" json:"access_token,omitempty"`
	RefreshToken string `protobuf:"bytes,3,opt,name=refresh_token,proto3" json:"refresh_token,omitempty"`
}

func (x *ServiceSignInData) Reset() {
	*x = ServiceSignInData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_authenticator_authenticator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceSignInData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceSignInData) ProtoMessage() {}

func (x *ServiceSignInData) ProtoReflect() protoreflect.Message {
	mi := &file_api_authenticator_authenticator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceSignInData.ProtoReflect.Descriptor instead.
func (*ServiceSignInData) Descriptor() ([]byte, []int) {
	return file_api_authenticator_authenticator_proto_rawDescGZIP(), []int{4}
}

func (x *ServiceSignInData) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *ServiceSignInData) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ServiceSignInData) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type ServiceSignInReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Inner:
	//
	//	*ServiceSignInReply_Error
	//	*ServiceSignInReply_Data
	Inner isServiceSignInReply_Inner `protobuf_oneof:"inner"`
}

func (x *ServiceSignInReply) Reset() {
	*x = ServiceSignInReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_authenticator_authenticator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceSignInReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceSignInReply) ProtoMessage() {}

func (x *ServiceSignInReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_authenticator_authenticator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceSignInReply.ProtoReflect.Descriptor instead.
func (*ServiceSignInReply) Descriptor() ([]byte, []int) {
	return file_api_authenticator_authenticator_proto_rawDescGZIP(), []int{5}
}

func (m *ServiceSignInReply) GetInner() isServiceSignInReply_Inner {
	if m != nil {
		return m.Inner
	}
	return nil
}

func (x *ServiceSignInReply) GetError() *protobuf.Error {
	if x, ok := x.GetInner().(*ServiceSignInReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ServiceSignInReply) GetData() *ServiceSignInData {
	if x, ok := x.GetInner().(*ServiceSignInReply_Data); ok {
		return x.Data
	}
	return nil
}

type isServiceSignInReply_Inner interface {
	isServiceSignInReply_Inner()
}

type ServiceSignInReply_Error struct {
	Error *protobuf.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ServiceSignInReply_Data struct {
	Data *ServiceSignInData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*ServiceSignInReply_Error) isServiceSignInReply_Inner() {}

func (*ServiceSignInReply_Data) isServiceSignInReply_Inner() {}

type RefreshTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId      string `protobuf:"bytes,1,opt,name=token_id,proto3" json:"token_id,omitempty"`
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,proto3" json:"refresh_token,omitempty"`
}

func (x *RefreshTokenRequest) Reset() {
	*x = RefreshTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_authenticator_authenticator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRequest) ProtoMessage() {}

func (x *RefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_authenticator_authenticator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_api_authenticator_authenticator_proto_rawDescGZIP(), []int{6}
}

func (x *RefreshTokenRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *RefreshTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type RefreshTokenData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,proto3" json:"access_token,omitempty"`
}

func (x *RefreshTokenData) Reset() {
	*x = RefreshTokenData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_authenticator_authenticator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenData) ProtoMessage() {}

func (x *RefreshTokenData) ProtoReflect() protoreflect.Message {
	mi := &file_api_authenticator_authenticator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenData.ProtoReflect.Descriptor instead.
func (*RefreshTokenData) Descriptor() ([]byte, []int) {
	return file_api_authenticator_authenticator_proto_rawDescGZIP(), []int{7}
}

func (x *RefreshTokenData) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type RefreshTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Inner:
	//
	//	*RefreshTokenReply_Error
	//	*RefreshTokenReply_Data
	Inner isRefreshTokenReply_Inner `protobuf_oneof:"inner"`
}

func (x *RefreshTokenReply) Reset() {
	*x = RefreshTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_authenticator_authenticator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenReply) ProtoMessage() {}

func (x *RefreshTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_authenticator_authenticator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenReply.ProtoReflect.Descriptor instead.
func (*RefreshTokenReply) Descriptor() ([]byte, []int) {
	return file_api_authenticator_authenticator_proto_rawDescGZIP(), []int{8}
}

func (m *RefreshTokenReply) GetInner() isRefreshTokenReply_Inner {
	if m != nil {
		return m.Inner
	}
	return nil
}

func (x *RefreshTokenReply) GetError() *protobuf.Error {
	if x, ok := x.GetInner().(*RefreshTokenReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *RefreshTokenReply) GetData() *RefreshTokenData {
	if x, ok := x.GetInner().(*RefreshTokenReply_Data); ok {
		return x.Data
	}
	return nil
}

type isRefreshTokenReply_Inner interface {
	isRefreshTokenReply_Inner()
}

type RefreshTokenReply_Error struct {
	Error *protobuf.Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type RefreshTokenReply_Data struct {
	Data *RefreshTokenData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*RefreshTokenReply_Error) isRefreshTokenReply_Inner() {}

func (*RefreshTokenReply_Data) isRefreshTokenReply_Inner() {}

var File_api_authenticator_authenticator_proto protoreflect.FileDescriptor

var file_api_authenticator_authenticator_proto_rawDesc = []byte{
	0x0a, 0x25, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x27, 0x70, 0x68, 0x61, 0x72, 0x6d, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3b, 0x50, 0x68, 0x61, 0x72, 0x6d, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x2d, 0x4a, 0x53, 0x43, 0x2f, 0x70, 0x6d, 0x63, 0x2d, 0x65, 0x63, 0x6d, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x01, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x70, 0x68, 0x61, 0x72, 0x6d,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x45, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x20, 0x01, 0x28,
	0x80, 0x02, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x20, 0x01, 0x28, 0x80, 0x02, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x76, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9d, 0x01, 0x0a,
	0x0f, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x68, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x4d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x70, 0x68, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x42, 0x07, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x66, 0x0a, 0x14,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x20, 0x01, 0x28,
	0x80, 0x02, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xfa, 0x42, 0x07, 0x72, 0x05, 0x20, 0x01, 0x28, 0x80, 0x02, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x79, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0xa3, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x49,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x68, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x50, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x70, 0x68, 0x61, 0x72, 0x6d,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x07, 0x0a, 0x05,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x69, 0x0a, 0x13, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x08,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x20, 0x01, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69,
	0x64, 0x12, 0x2d, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x20,
	0x01, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x36, 0x0a, 0x10, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa1, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x68, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x39, 0x2e, 0x70, 0x68, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x42, 0x07, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2a, 0x29, 0x0a, 0x0b,
	0x45, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x55, 0x53, 0x54, 0x4f, 0x4d, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x4d, 0x50,
	0x4c, 0x4f, 0x59, 0x45, 0x45, 0x10, 0x01, 0x32, 0xff, 0x05, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xae, 0x01, 0x0a, 0x0a, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x12, 0x3a, 0x2e, 0x70, 0x68, 0x61, 0x72, 0x6d,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x70, 0x68, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x2d, 0x69, 0x6e, 0x12, 0xbb, 0x01, 0x0a, 0x10, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x3c, 0x2e, 0x70, 0x68, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e,
	0x70, 0x68, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x27, 0x12, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0xba, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x12, 0x3d, 0x2e, 0x70, 0x68, 0x61,
	0x72, 0x6d, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x70, 0x68, 0x61, 0x72,
	0x6d, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x49,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01,
	0x2a, 0x22, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x73, 0x69,
	0x67, 0x6e, 0x2d, 0x69, 0x6e, 0x12, 0xc1, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3c, 0x2e,
	0x70, 0x68, 0x61, 0x72, 0x6d, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x70, 0x68,
	0x61, 0x72, 0x6d, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12,
	0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x40, 0x5a, 0x3e, 0x70, 0x6d, 0x63,
	0x2d, 0x65, 0x63, 0x6d, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x3b, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_authenticator_authenticator_proto_rawDescOnce sync.Once
	file_api_authenticator_authenticator_proto_rawDescData = file_api_authenticator_authenticator_proto_rawDesc
)

func file_api_authenticator_authenticator_proto_rawDescGZIP() []byte {
	file_api_authenticator_authenticator_proto_rawDescOnce.Do(func() {
		file_api_authenticator_authenticator_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_authenticator_authenticator_proto_rawDescData)
	})
	return file_api_authenticator_authenticator_proto_rawDescData
}

var file_api_authenticator_authenticator_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_authenticator_authenticator_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_authenticator_authenticator_proto_goTypes = []interface{}{
	(ESignInKind)(0),             // 0: pharmacity.authentication.authenticator.ESignInKind
	(*UserSignInRequest)(nil),    // 1: pharmacity.authentication.authenticator.UserSignInRequest
	(*UserSignInData)(nil),       // 2: pharmacity.authentication.authenticator.UserSignInData
	(*UserSignInReply)(nil),      // 3: pharmacity.authentication.authenticator.UserSignInReply
	(*ServiceSignInRequest)(nil), // 4: pharmacity.authentication.authenticator.ServiceSignInRequest
	(*ServiceSignInData)(nil),    // 5: pharmacity.authentication.authenticator.ServiceSignInData
	(*ServiceSignInReply)(nil),   // 6: pharmacity.authentication.authenticator.ServiceSignInReply
	(*RefreshTokenRequest)(nil),  // 7: pharmacity.authentication.authenticator.RefreshTokenRequest
	(*RefreshTokenData)(nil),     // 8: pharmacity.authentication.authenticator.RefreshTokenData
	(*RefreshTokenReply)(nil),    // 9: pharmacity.authentication.authenticator.RefreshTokenReply
	(*protobuf.Error)(nil),       // 10: pharmacity.protobuf.Error
}
var file_api_authenticator_authenticator_proto_depIdxs = []int32{
	0,  // 0: pharmacity.authentication.authenticator.UserSignInRequest.kind:type_name -> pharmacity.authentication.authenticator.ESignInKind
	10, // 1: pharmacity.authentication.authenticator.UserSignInReply.error:type_name -> pharmacity.protobuf.Error
	2,  // 2: pharmacity.authentication.authenticator.UserSignInReply.data:type_name -> pharmacity.authentication.authenticator.UserSignInData
	10, // 3: pharmacity.authentication.authenticator.ServiceSignInReply.error:type_name -> pharmacity.protobuf.Error
	5,  // 4: pharmacity.authentication.authenticator.ServiceSignInReply.data:type_name -> pharmacity.authentication.authenticator.ServiceSignInData
	10, // 5: pharmacity.authentication.authenticator.RefreshTokenReply.error:type_name -> pharmacity.protobuf.Error
	8,  // 6: pharmacity.authentication.authenticator.RefreshTokenReply.data:type_name -> pharmacity.authentication.authenticator.RefreshTokenData
	1,  // 7: pharmacity.authentication.authenticator.Authenticator.UserSignIn:input_type -> pharmacity.authentication.authenticator.UserSignInRequest
	7,  // 8: pharmacity.authentication.authenticator.Authenticator.UserRefreshToken:input_type -> pharmacity.authentication.authenticator.RefreshTokenRequest
	4,  // 9: pharmacity.authentication.authenticator.Authenticator.ServiceSignIn:input_type -> pharmacity.authentication.authenticator.ServiceSignInRequest
	7,  // 10: pharmacity.authentication.authenticator.Authenticator.ServiceRefreshToken:input_type -> pharmacity.authentication.authenticator.RefreshTokenRequest
	3,  // 11: pharmacity.authentication.authenticator.Authenticator.UserSignIn:output_type -> pharmacity.authentication.authenticator.UserSignInReply
	9,  // 12: pharmacity.authentication.authenticator.Authenticator.UserRefreshToken:output_type -> pharmacity.authentication.authenticator.RefreshTokenReply
	6,  // 13: pharmacity.authentication.authenticator.Authenticator.ServiceSignIn:output_type -> pharmacity.authentication.authenticator.ServiceSignInReply
	9,  // 14: pharmacity.authentication.authenticator.Authenticator.ServiceRefreshToken:output_type -> pharmacity.authentication.authenticator.RefreshTokenReply
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_authenticator_authenticator_proto_init() }
func file_api_authenticator_authenticator_proto_init() {
	if File_api_authenticator_authenticator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_authenticator_authenticator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSignInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_authenticator_authenticator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSignInData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_authenticator_authenticator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSignInReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_authenticator_authenticator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceSignInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_authenticator_authenticator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceSignInData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_authenticator_authenticator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceSignInReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_authenticator_authenticator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_authenticator_authenticator_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_authenticator_authenticator_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_authenticator_authenticator_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*UserSignInReply_Error)(nil),
		(*UserSignInReply_Data)(nil),
	}
	file_api_authenticator_authenticator_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ServiceSignInReply_Error)(nil),
		(*ServiceSignInReply_Data)(nil),
	}
	file_api_authenticator_authenticator_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*RefreshTokenReply_Error)(nil),
		(*RefreshTokenReply_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_authenticator_authenticator_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_authenticator_authenticator_proto_goTypes,
		DependencyIndexes: file_api_authenticator_authenticator_proto_depIdxs,
		EnumInfos:         file_api_authenticator_authenticator_proto_enumTypes,
		MessageInfos:      file_api_authenticator_authenticator_proto_msgTypes,
	}.Build()
	File_api_authenticator_authenticator_proto = out.File
	file_api_authenticator_authenticator_proto_rawDesc = nil
	file_api_authenticator_authenticator_proto_goTypes = nil
	file_api_authenticator_authenticator_proto_depIdxs = nil
}
